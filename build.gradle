// queryDsl설치 순서 1) Querydsl 사용하기 위한 변수 설정
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.busanit501'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 부트 프로젝트 생성 후 , 개별 설정

    //롬복, 테스트 환경에서 동작하기.
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //타임리프 설정, 공통 레이아웃 도구
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

    // queryDsl설치 순서 2)  동적 sql을 다루고 빌드 패턴을 이용하고, 자바의 컴파일러 문법 체크 도움도 받기
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    // queryDsl설치 순서 3) Querydsl 설정.
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )

    // 5, DTO <-> VO(엔티티클래스) 변환기, 필요. ModelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.4'
}

tasks.named('test') {
    useJUnitPlatform()
}

// queryDsl설치 순서 4)
// 프로젝트를 빌드 할 때마다, 해당 Q 도메인을 소스로 등록 하는 과정을 자동으로 하게 하기
sourceSets {

    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
compileJava.dependsOn('clean')
